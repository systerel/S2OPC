/* ========================================================================
 * Copyright (c) 2005-2016 The OPC Foundation, Inc. All rights reserved.
 *
 * OPC Foundation MIT License 1.00
 *
 * Permission is hereby granted, free of charge, to any person
 * obtaining a copy of this software and associated documentation
 * files (the "Software"), to deal in the Software without
 * restriction, including without limitation the rights to use,
 * copy, modify, merge, publish, distribute, sublicense, and/or sell
 * copies of the Software, and to permit persons to whom the
 * Software is furnished to do so, subject to the following
 * conditions:
 *
 * The above copyright notice and this permission notice shall be
 * included in all copies or substantial portions of the Software.
 * THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND,
 * EXPRESS OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES
 * OF MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND
 * NONINFRINGEMENT. IN NO EVENT SHALL THE AUTHORS OR COPYRIGHT
 * HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER LIABILITY,
 * WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING
 * FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR
 * OTHER DEALINGS IN THE SOFTWARE.
 *
 * The complete license agreement can be found here:
 * http://opcfoundation.org/License/MIT/1.00/
 *
 * Modifications: adaptation for S2OPC project
 * ======================================================================*/

#ifndef SOPC_Enum_Types_H_
#define SOPC_Enum_Types_H_ 1

/* DO NOT EDIT. THIS FILE IS GENERATED BY THE SCRIPT gen-sopc-types.py */

#include <stdint.h>

#ifndef OPCUA_EXCLUDE_NamingRuleType
/*============================================================================
 * The NamingRuleType enumeration.
 *===========================================================================*/
typedef enum _OpcUa_NamingRuleType
{
    OpcUa_NamingRuleType_Mandatory = 1,
    OpcUa_NamingRuleType_Optional = 2,
    OpcUa_NamingRuleType_Constraint = 3,
    OpcUa_NamingRuleType_SizeOf = INT32_MAX
} OpcUa_NamingRuleType;

#endif

#ifndef OPCUA_EXCLUDE_OpenFileMode
/*============================================================================
 * The OpenFileMode enumeration.
 *===========================================================================*/
typedef enum _OpcUa_OpenFileMode
{
    OpcUa_OpenFileMode_Read = 1,
    OpcUa_OpenFileMode_Write = 2,
    OpcUa_OpenFileMode_EraseExisting = 4,
    OpcUa_OpenFileMode_Append = 8,
    OpcUa_OpenFileMode_SizeOf = INT32_MAX
} OpcUa_OpenFileMode;

#endif

#ifndef OPCUA_EXCLUDE_IdentityCriteriaType
/*============================================================================
 * The IdentityCriteriaType enumeration.
 *===========================================================================*/
typedef enum _OpcUa_IdentityCriteriaType
{
    OpcUa_IdentityCriteriaType_UserName = 1,
    OpcUa_IdentityCriteriaType_Thumbprint = 2,
    OpcUa_IdentityCriteriaType_Role = 3,
    OpcUa_IdentityCriteriaType_GroupId = 4,
    OpcUa_IdentityCriteriaType_Anonymous = 5,
    OpcUa_IdentityCriteriaType_AuthenticatedUser = 6,
    OpcUa_IdentityCriteriaType_Application = 7,
    OpcUa_IdentityCriteriaType_SizeOf = INT32_MAX
} OpcUa_IdentityCriteriaType;

#endif

#ifndef OPCUA_EXCLUDE_TrustListMasks
/*============================================================================
 * The TrustListMasks enumeration.
 *===========================================================================*/
typedef enum _OpcUa_TrustListMasks
{
    OpcUa_TrustListMasks_None = 0,
    OpcUa_TrustListMasks_TrustedCertificates = 1,
    OpcUa_TrustListMasks_TrustedCrls = 2,
    OpcUa_TrustListMasks_IssuerCertificates = 4,
    OpcUa_TrustListMasks_IssuerCrls = 8,
    OpcUa_TrustListMasks_All = 15,
    OpcUa_TrustListMasks_SizeOf = INT32_MAX
} OpcUa_TrustListMasks;

#endif

#ifndef OPCUA_EXCLUDE_PubSubState
/*============================================================================
 * The PubSubState enumeration.
 *===========================================================================*/
typedef enum _OpcUa_PubSubState
{
    OpcUa_PubSubState_Disabled = 0,
    OpcUa_PubSubState_Paused = 1,
    OpcUa_PubSubState_Operational = 2,
    OpcUa_PubSubState_Error = 3,
    OpcUa_PubSubState_PreOperational = 4,
    OpcUa_PubSubState_SizeOf = INT32_MAX
} OpcUa_PubSubState;

#endif

#ifndef OPCUA_EXCLUDE_DataSetFieldFlags
/*============================================================================
 * The DataSetFieldFlags enumeration.
 *===========================================================================*/
typedef enum _OpcUa_DataSetFieldFlags
{
    OpcUa_DataSetFieldFlags_None = 0,
    OpcUa_DataSetFieldFlags_PromotedField = 1,
    OpcUa_DataSetFieldFlags_SizeOf = INT32_MAX
} OpcUa_DataSetFieldFlags;

#endif

#ifndef OPCUA_EXCLUDE_DataSetFieldContentMask
/*============================================================================
 * The DataSetFieldContentMask enumeration.
 *===========================================================================*/
typedef enum _OpcUa_DataSetFieldContentMask
{
    OpcUa_DataSetFieldContentMask_None = 0,
    OpcUa_DataSetFieldContentMask_StatusCode = 1,
    OpcUa_DataSetFieldContentMask_SourceTimestamp = 2,
    OpcUa_DataSetFieldContentMask_ServerTimestamp = 4,
    OpcUa_DataSetFieldContentMask_SourcePicoSeconds = 8,
    OpcUa_DataSetFieldContentMask_ServerPicoSeconds = 16,
    OpcUa_DataSetFieldContentMask_RawData = 32,
    OpcUa_DataSetFieldContentMask_SizeOf = INT32_MAX
} OpcUa_DataSetFieldContentMask;

#endif

#ifndef OPCUA_EXCLUDE_OverrideValueHandling
/*============================================================================
 * The OverrideValueHandling enumeration.
 *===========================================================================*/
typedef enum _OpcUa_OverrideValueHandling
{
    OpcUa_OverrideValueHandling_Disabled = 0,
    OpcUa_OverrideValueHandling_LastUsableValue = 1,
    OpcUa_OverrideValueHandling_OverrideValue = 2,
    OpcUa_OverrideValueHandling_SizeOf = INT32_MAX
} OpcUa_OverrideValueHandling;

#endif

#ifndef OPCUA_EXCLUDE_DataSetOrderingType
/*============================================================================
 * The DataSetOrderingType enumeration.
 *===========================================================================*/
typedef enum _OpcUa_DataSetOrderingType
{
    OpcUa_DataSetOrderingType_Undefined = 0,
    OpcUa_DataSetOrderingType_AscendingWriterId = 1,
    OpcUa_DataSetOrderingType_AscendingWriterIdSingle = 2,
    OpcUa_DataSetOrderingType_SizeOf = INT32_MAX
} OpcUa_DataSetOrderingType;

#endif

#ifndef OPCUA_EXCLUDE_UadpNetworkMessageContentMask
/*============================================================================
 * The UadpNetworkMessageContentMask enumeration.
 *===========================================================================*/
typedef enum _OpcUa_UadpNetworkMessageContentMask
{
    OpcUa_UadpNetworkMessageContentMask_None = 0,
    OpcUa_UadpNetworkMessageContentMask_PublisherId = 1,
    OpcUa_UadpNetworkMessageContentMask_GroupHeader = 2,
    OpcUa_UadpNetworkMessageContentMask_WriterGroupId = 4,
    OpcUa_UadpNetworkMessageContentMask_GroupVersion = 8,
    OpcUa_UadpNetworkMessageContentMask_NetworkMessageNumber = 16,
    OpcUa_UadpNetworkMessageContentMask_SequenceNumber = 32,
    OpcUa_UadpNetworkMessageContentMask_PayloadHeader = 64,
    OpcUa_UadpNetworkMessageContentMask_Timestamp = 128,
    OpcUa_UadpNetworkMessageContentMask_PicoSeconds = 256,
    OpcUa_UadpNetworkMessageContentMask_DataSetClassId = 512,
    OpcUa_UadpNetworkMessageContentMask_PromotedFields = 1024,
    OpcUa_UadpNetworkMessageContentMask_SizeOf = INT32_MAX
} OpcUa_UadpNetworkMessageContentMask;

#endif

#ifndef OPCUA_EXCLUDE_UadpDataSetMessageContentMask
/*============================================================================
 * The UadpDataSetMessageContentMask enumeration.
 *===========================================================================*/
typedef enum _OpcUa_UadpDataSetMessageContentMask
{
    OpcUa_UadpDataSetMessageContentMask_None = 0,
    OpcUa_UadpDataSetMessageContentMask_Timestamp = 1,
    OpcUa_UadpDataSetMessageContentMask_PicoSeconds = 2,
    OpcUa_UadpDataSetMessageContentMask_Status = 4,
    OpcUa_UadpDataSetMessageContentMask_MajorVersion = 8,
    OpcUa_UadpDataSetMessageContentMask_MinorVersion = 16,
    OpcUa_UadpDataSetMessageContentMask_SequenceNumber = 32,
    OpcUa_UadpDataSetMessageContentMask_SizeOf = INT32_MAX
} OpcUa_UadpDataSetMessageContentMask;

#endif

#ifndef OPCUA_EXCLUDE_JsonNetworkMessageContentMask
/*============================================================================
 * The JsonNetworkMessageContentMask enumeration.
 *===========================================================================*/
typedef enum _OpcUa_JsonNetworkMessageContentMask
{
    OpcUa_JsonNetworkMessageContentMask_None = 0,
    OpcUa_JsonNetworkMessageContentMask_NetworkMessageHeader = 1,
    OpcUa_JsonNetworkMessageContentMask_DataSetMessageHeader = 2,
    OpcUa_JsonNetworkMessageContentMask_SingleDataSetMessage = 4,
    OpcUa_JsonNetworkMessageContentMask_PublisherId = 8,
    OpcUa_JsonNetworkMessageContentMask_DataSetClassId = 16,
    OpcUa_JsonNetworkMessageContentMask_ReplyTo = 32,
    OpcUa_JsonNetworkMessageContentMask_SizeOf = INT32_MAX
} OpcUa_JsonNetworkMessageContentMask;

#endif

#ifndef OPCUA_EXCLUDE_JsonDataSetMessageContentMask
/*============================================================================
 * The JsonDataSetMessageContentMask enumeration.
 *===========================================================================*/
typedef enum _OpcUa_JsonDataSetMessageContentMask
{
    OpcUa_JsonDataSetMessageContentMask_None = 0,
    OpcUa_JsonDataSetMessageContentMask_DataSetWriterId = 1,
    OpcUa_JsonDataSetMessageContentMask_MetaDataVersion = 2,
    OpcUa_JsonDataSetMessageContentMask_SequenceNumber = 4,
    OpcUa_JsonDataSetMessageContentMask_Timestamp = 8,
    OpcUa_JsonDataSetMessageContentMask_Status = 16,
    OpcUa_JsonDataSetMessageContentMask_MessageType = 32,
    OpcUa_JsonDataSetMessageContentMask_SizeOf = INT32_MAX
} OpcUa_JsonDataSetMessageContentMask;

#endif

#ifndef OPCUA_EXCLUDE_BrokerTransportQualityOfService
/*============================================================================
 * The BrokerTransportQualityOfService enumeration.
 *===========================================================================*/
typedef enum _OpcUa_BrokerTransportQualityOfService
{
    OpcUa_BrokerTransportQualityOfService_NotSpecified = 0,
    OpcUa_BrokerTransportQualityOfService_BestEffort = 1,
    OpcUa_BrokerTransportQualityOfService_AtLeastOnce = 2,
    OpcUa_BrokerTransportQualityOfService_AtMostOnce = 3,
    OpcUa_BrokerTransportQualityOfService_ExactlyOnce = 4,
    OpcUa_BrokerTransportQualityOfService_SizeOf = INT32_MAX
} OpcUa_BrokerTransportQualityOfService;

#endif

#ifndef OPCUA_EXCLUDE_DiagnosticsLevel
/*============================================================================
 * The DiagnosticsLevel enumeration.
 *===========================================================================*/
typedef enum _OpcUa_DiagnosticsLevel
{
    OpcUa_DiagnosticsLevel_Basic = 0,
    OpcUa_DiagnosticsLevel_Advanced = 1,
    OpcUa_DiagnosticsLevel_Info = 2,
    OpcUa_DiagnosticsLevel_Log = 3,
    OpcUa_DiagnosticsLevel_Debug = 4,
    OpcUa_DiagnosticsLevel_SizeOf = INT32_MAX
} OpcUa_DiagnosticsLevel;

#endif

#ifndef OPCUA_EXCLUDE_PubSubDiagnosticsCounterClassification
/*============================================================================
 * The PubSubDiagnosticsCounterClassification enumeration.
 *===========================================================================*/
typedef enum _OpcUa_PubSubDiagnosticsCounterClassification
{
    OpcUa_PubSubDiagnosticsCounterClassification_Information = 0,
    OpcUa_PubSubDiagnosticsCounterClassification_Error = 1,
    OpcUa_PubSubDiagnosticsCounterClassification_SizeOf = INT32_MAX
} OpcUa_PubSubDiagnosticsCounterClassification;

#endif

#ifndef OPCUA_EXCLUDE_Duplex
/*============================================================================
 * The Duplex enumeration.
 *===========================================================================*/
typedef enum _OpcUa_Duplex
{
    OpcUa_Duplex_Full = 0,
    OpcUa_Duplex_Half = 1,
    OpcUa_Duplex_Unknown = 2,
    OpcUa_Duplex_SizeOf = INT32_MAX
} OpcUa_Duplex;

#endif

#ifndef OPCUA_EXCLUDE_InterfaceAdminStatus
/*============================================================================
 * The InterfaceAdminStatus enumeration.
 *===========================================================================*/
typedef enum _OpcUa_InterfaceAdminStatus
{
    OpcUa_InterfaceAdminStatus_Up = 0,
    OpcUa_InterfaceAdminStatus_Down = 1,
    OpcUa_InterfaceAdminStatus_Testing = 2,
    OpcUa_InterfaceAdminStatus_SizeOf = INT32_MAX
} OpcUa_InterfaceAdminStatus;

#endif

#ifndef OPCUA_EXCLUDE_InterfaceOperStatus
/*============================================================================
 * The InterfaceOperStatus enumeration.
 *===========================================================================*/
typedef enum _OpcUa_InterfaceOperStatus
{
    OpcUa_InterfaceOperStatus_Up = 0,
    OpcUa_InterfaceOperStatus_Down = 1,
    OpcUa_InterfaceOperStatus_Testing = 2,
    OpcUa_InterfaceOperStatus_Unknown = 3,
    OpcUa_InterfaceOperStatus_Dormant = 4,
    OpcUa_InterfaceOperStatus_NotPresent = 5,
    OpcUa_InterfaceOperStatus_LowerLayerDown = 6,
    OpcUa_InterfaceOperStatus_SizeOf = INT32_MAX
} OpcUa_InterfaceOperStatus;

#endif

#ifndef OPCUA_EXCLUDE_NegotiationStatus
/*============================================================================
 * The NegotiationStatus enumeration.
 *===========================================================================*/
typedef enum _OpcUa_NegotiationStatus
{
    OpcUa_NegotiationStatus_InProgress = 0,
    OpcUa_NegotiationStatus_Complete = 1,
    OpcUa_NegotiationStatus_Failed = 2,
    OpcUa_NegotiationStatus_Unknown = 3,
    OpcUa_NegotiationStatus_NoNegotiation = 4,
    OpcUa_NegotiationStatus_SizeOf = INT32_MAX
} OpcUa_NegotiationStatus;

#endif

#ifndef OPCUA_EXCLUDE_TsnFailureCode
/*============================================================================
 * The TsnFailureCode enumeration.
 *===========================================================================*/
typedef enum _OpcUa_TsnFailureCode
{
    OpcUa_TsnFailureCode_NoFailure = 0,
    OpcUa_TsnFailureCode_InsufficientBandwidth = 1,
    OpcUa_TsnFailureCode_InsufficientResources = 2,
    OpcUa_TsnFailureCode_InsufficientTrafficClassBandwidth = 3,
    OpcUa_TsnFailureCode_StreamIdInUse = 4,
    OpcUa_TsnFailureCode_StreamDestinationAddressInUse = 5,
    OpcUa_TsnFailureCode_StreamPreemptedByHigherRank = 6,
    OpcUa_TsnFailureCode_LatencyHasChanged = 7,
    OpcUa_TsnFailureCode_EgressPortNotAvbCapable = 8,
    OpcUa_TsnFailureCode_UseDifferentDestinationAddress = 9,
    OpcUa_TsnFailureCode_OutOfMsrpResources = 10,
    OpcUa_TsnFailureCode_OutOfMmrpResources = 11,
    OpcUa_TsnFailureCode_CannotStoreDestinationAddress = 12,
    OpcUa_TsnFailureCode_PriorityIsNotAnSrcClass = 13,
    OpcUa_TsnFailureCode_MaxFrameSizeTooLarge = 14,
    OpcUa_TsnFailureCode_MaxFanInPortsLimitReached = 15,
    OpcUa_TsnFailureCode_FirstValueChangedForStreamId = 16,
    OpcUa_TsnFailureCode_VlanBlockedOnEgress = 17,
    OpcUa_TsnFailureCode_VlanTaggingDisabledOnEgress = 18,
    OpcUa_TsnFailureCode_SrClassPriorityMismatch = 19,
    OpcUa_TsnFailureCode_FeatureNotPropagated = 20,
    OpcUa_TsnFailureCode_MaxLatencyExceeded = 21,
    OpcUa_TsnFailureCode_BridgeDoesNotProvideNetworkId = 22,
    OpcUa_TsnFailureCode_StreamTransformNotSupported = 23,
    OpcUa_TsnFailureCode_StreamIdTypeNotSupported = 24,
    OpcUa_TsnFailureCode_FeatureNotSupported = 25,
    OpcUa_TsnFailureCode_SizeOf = INT32_MAX
} OpcUa_TsnFailureCode;

#endif

#ifndef OPCUA_EXCLUDE_TsnStreamState
/*============================================================================
 * The TsnStreamState enumeration.
 *===========================================================================*/
typedef enum _OpcUa_TsnStreamState
{
    OpcUa_TsnStreamState_Disabled = 0,
    OpcUa_TsnStreamState_Configuring = 1,
    OpcUa_TsnStreamState_Ready = 2,
    OpcUa_TsnStreamState_Operational = 3,
    OpcUa_TsnStreamState_Error = 4,
    OpcUa_TsnStreamState_SizeOf = INT32_MAX
} OpcUa_TsnStreamState;

#endif

#ifndef OPCUA_EXCLUDE_TsnTalkerStatus
/*============================================================================
 * The TsnTalkerStatus enumeration.
 *===========================================================================*/
typedef enum _OpcUa_TsnTalkerStatus
{
    OpcUa_TsnTalkerStatus_None = 0,
    OpcUa_TsnTalkerStatus_Ready = 1,
    OpcUa_TsnTalkerStatus_Failed = 2,
    OpcUa_TsnTalkerStatus_SizeOf = INT32_MAX
} OpcUa_TsnTalkerStatus;

#endif

#ifndef OPCUA_EXCLUDE_TsnListenerStatus
/*============================================================================
 * The TsnListenerStatus enumeration.
 *===========================================================================*/
typedef enum _OpcUa_TsnListenerStatus
{
    OpcUa_TsnListenerStatus_None = 0,
    OpcUa_TsnListenerStatus_Ready = 1,
    OpcUa_TsnListenerStatus_PartialFailed = 2,
    OpcUa_TsnListenerStatus_Failed = 3,
    OpcUa_TsnListenerStatus_SizeOf = INT32_MAX
} OpcUa_TsnListenerStatus;

#endif

#ifndef OPCUA_EXCLUDE_IdType
/*============================================================================
 * The IdType enumeration.
 *===========================================================================*/
typedef enum _OpcUa_IdType
{
    OpcUa_IdType_Numeric = 0,
    OpcUa_IdType_String = 1,
    OpcUa_IdType_Guid = 2,
    OpcUa_IdType_Opaque = 3,
    OpcUa_IdType_SizeOf = INT32_MAX
} OpcUa_IdType;

#endif

#ifndef OPCUA_EXCLUDE_NodeClass
/*============================================================================
 * The NodeClass enumeration.
 *===========================================================================*/
typedef enum _OpcUa_NodeClass
{
    OpcUa_NodeClass_Unspecified = 0,
    OpcUa_NodeClass_Object = 1,
    OpcUa_NodeClass_Variable = 2,
    OpcUa_NodeClass_Method = 4,
    OpcUa_NodeClass_ObjectType = 8,
    OpcUa_NodeClass_VariableType = 16,
    OpcUa_NodeClass_ReferenceType = 32,
    OpcUa_NodeClass_DataType = 64,
    OpcUa_NodeClass_View = 128,
    OpcUa_NodeClass_SizeOf = INT32_MAX
} OpcUa_NodeClass;

#endif

#ifndef OPCUA_EXCLUDE_PermissionType
/*============================================================================
 * The PermissionType enumeration.
 *===========================================================================*/
typedef enum _OpcUa_PermissionType
{
    OpcUa_PermissionType_None = 0,
    OpcUa_PermissionType_Browse = 1,
    OpcUa_PermissionType_ReadRolePermissions = 2,
    OpcUa_PermissionType_WriteAttribute = 4,
    OpcUa_PermissionType_WriteRolePermissions = 8,
    OpcUa_PermissionType_WriteHistorizing = 16,
    OpcUa_PermissionType_Read = 32,
    OpcUa_PermissionType_Write = 64,
    OpcUa_PermissionType_ReadHistory = 128,
    OpcUa_PermissionType_InsertHistory = 256,
    OpcUa_PermissionType_ModifyHistory = 512,
    OpcUa_PermissionType_DeleteHistory = 1024,
    OpcUa_PermissionType_ReceiveEvents = 2048,
    OpcUa_PermissionType_Call = 4096,
    OpcUa_PermissionType_AddReference = 8192,
    OpcUa_PermissionType_RemoveReference = 16384,
    OpcUa_PermissionType_DeleteNode = 32768,
    OpcUa_PermissionType_AddNode = 65536,
    OpcUa_PermissionType_SizeOf = INT32_MAX
} OpcUa_PermissionType;

#endif

#ifndef OPCUA_EXCLUDE_AccessLevelType
/*============================================================================
 * The AccessLevelType enumeration.
 *===========================================================================*/
typedef enum _OpcUa_AccessLevelType
{
    OpcUa_AccessLevelType_None = 0,
    OpcUa_AccessLevelType_CurrentRead = 1,
    OpcUa_AccessLevelType_CurrentWrite = 2,
    OpcUa_AccessLevelType_HistoryRead = 4,
    OpcUa_AccessLevelType_HistoryWrite = 8,
    OpcUa_AccessLevelType_SemanticChange = 16,
    OpcUa_AccessLevelType_StatusWrite = 32,
    OpcUa_AccessLevelType_TimestampWrite = 64,
    OpcUa_AccessLevelType_SizeOf = INT32_MAX
} OpcUa_AccessLevelType;

#endif

#ifndef OPCUA_EXCLUDE_AccessLevelExType
/*============================================================================
 * The AccessLevelExType enumeration.
 *===========================================================================*/
typedef enum _OpcUa_AccessLevelExType
{
    OpcUa_AccessLevelExType_None = 0,
    OpcUa_AccessLevelExType_CurrentRead = 1,
    OpcUa_AccessLevelExType_CurrentWrite = 2,
    OpcUa_AccessLevelExType_HistoryRead = 4,
    OpcUa_AccessLevelExType_HistoryWrite = 8,
    OpcUa_AccessLevelExType_SemanticChange = 16,
    OpcUa_AccessLevelExType_StatusWrite = 32,
    OpcUa_AccessLevelExType_TimestampWrite = 64,
    OpcUa_AccessLevelExType_NonatomicRead = 256,
    OpcUa_AccessLevelExType_NonatomicWrite = 512,
    OpcUa_AccessLevelExType_WriteFullArrayOnly = 1024,
    OpcUa_AccessLevelExType_NoSubDataTypes = 2048,
    OpcUa_AccessLevelExType_SizeOf = INT32_MAX
} OpcUa_AccessLevelExType;

#endif

#ifndef OPCUA_EXCLUDE_EventNotifierType
/*============================================================================
 * The EventNotifierType enumeration.
 *===========================================================================*/
typedef enum _OpcUa_EventNotifierType
{
    OpcUa_EventNotifierType_None = 0,
    OpcUa_EventNotifierType_SubscribeToEvents = 1,
    OpcUa_EventNotifierType_HistoryRead = 4,
    OpcUa_EventNotifierType_HistoryWrite = 8,
    OpcUa_EventNotifierType_SizeOf = INT32_MAX
} OpcUa_EventNotifierType;

#endif

#ifndef OPCUA_EXCLUDE_AccessRestrictionType
/*============================================================================
 * The AccessRestrictionType enumeration.
 *===========================================================================*/
typedef enum _OpcUa_AccessRestrictionType
{
    OpcUa_AccessRestrictionType_None = 0,
    OpcUa_AccessRestrictionType_SigningRequired = 1,
    OpcUa_AccessRestrictionType_EncryptionRequired = 2,
    OpcUa_AccessRestrictionType_SessionRequired = 4,
    OpcUa_AccessRestrictionType_ApplyRestrictionsToBrowse = 8,
    OpcUa_AccessRestrictionType_SizeOf = INT32_MAX
} OpcUa_AccessRestrictionType;

#endif

#ifndef OPCUA_EXCLUDE_StructureType
/*============================================================================
 * The StructureType enumeration.
 *===========================================================================*/
typedef enum _OpcUa_StructureType
{
    OpcUa_StructureType_Structure = 0,
    OpcUa_StructureType_StructureWithOptionalFields = 1,
    OpcUa_StructureType_Union = 2,
    OpcUa_StructureType_StructureWithSubtypedValues = 3,
    OpcUa_StructureType_UnionWithSubtypedValues = 4,
    OpcUa_StructureType_SizeOf = INT32_MAX
} OpcUa_StructureType;

#endif

#ifndef OPCUA_EXCLUDE_ApplicationType
/*============================================================================
 * The ApplicationType enumeration.
 *===========================================================================*/
typedef enum _OpcUa_ApplicationType
{
    OpcUa_ApplicationType_Server = 0,
    OpcUa_ApplicationType_Client = 1,
    OpcUa_ApplicationType_ClientAndServer = 2,
    OpcUa_ApplicationType_DiscoveryServer = 3,
    OpcUa_ApplicationType_SizeOf = INT32_MAX
} OpcUa_ApplicationType;

#endif

#ifndef OPCUA_EXCLUDE_MessageSecurityMode
/*============================================================================
 * The MessageSecurityMode enumeration.
 *===========================================================================*/
typedef enum _OpcUa_MessageSecurityMode
{
    OpcUa_MessageSecurityMode_Invalid = 0,
    OpcUa_MessageSecurityMode_None = 1,
    OpcUa_MessageSecurityMode_Sign = 2,
    OpcUa_MessageSecurityMode_SignAndEncrypt = 3,
    OpcUa_MessageSecurityMode_SizeOf = INT32_MAX
} OpcUa_MessageSecurityMode;

#endif

#ifndef OPCUA_EXCLUDE_UserTokenType
/*============================================================================
 * The UserTokenType enumeration.
 *===========================================================================*/
typedef enum _OpcUa_UserTokenType
{
    OpcUa_UserTokenType_Anonymous = 0,
    OpcUa_UserTokenType_UserName = 1,
    OpcUa_UserTokenType_Certificate = 2,
    OpcUa_UserTokenType_IssuedToken = 3,
    OpcUa_UserTokenType_SizeOf = INT32_MAX
} OpcUa_UserTokenType;

#endif

#ifndef OPCUA_EXCLUDE_SecurityTokenRequestType
/*============================================================================
 * The SecurityTokenRequestType enumeration.
 *===========================================================================*/
typedef enum _OpcUa_SecurityTokenRequestType
{
    OpcUa_SecurityTokenRequestType_Issue = 0,
    OpcUa_SecurityTokenRequestType_Renew = 1,
    OpcUa_SecurityTokenRequestType_SizeOf = INT32_MAX
} OpcUa_SecurityTokenRequestType;

#endif

#ifndef OPCUA_EXCLUDE_NodeAttributesMask
/*============================================================================
 * The NodeAttributesMask enumeration.
 *===========================================================================*/
typedef enum _OpcUa_NodeAttributesMask
{
    OpcUa_NodeAttributesMask_None = 0,
    OpcUa_NodeAttributesMask_AccessLevel = 1,
    OpcUa_NodeAttributesMask_ArrayDimensions = 2,
    OpcUa_NodeAttributesMask_BrowseName = 4,
    OpcUa_NodeAttributesMask_ContainsNoLoops = 8,
    OpcUa_NodeAttributesMask_DataType = 16,
    OpcUa_NodeAttributesMask_Description = 32,
    OpcUa_NodeAttributesMask_DisplayName = 64,
    OpcUa_NodeAttributesMask_EventNotifier = 128,
    OpcUa_NodeAttributesMask_Executable = 256,
    OpcUa_NodeAttributesMask_Historizing = 512,
    OpcUa_NodeAttributesMask_InverseName = 1024,
    OpcUa_NodeAttributesMask_IsAbstract = 2048,
    OpcUa_NodeAttributesMask_MinimumSamplingInterval = 4096,
    OpcUa_NodeAttributesMask_NodeClass = 8192,
    OpcUa_NodeAttributesMask_NodeId = 16384,
    OpcUa_NodeAttributesMask_Symmetric = 32768,
    OpcUa_NodeAttributesMask_UserAccessLevel = 65536,
    OpcUa_NodeAttributesMask_UserExecutable = 131072,
    OpcUa_NodeAttributesMask_UserWriteMask = 262144,
    OpcUa_NodeAttributesMask_ValueRank = 524288,
    OpcUa_NodeAttributesMask_WriteMask = 1048576,
    OpcUa_NodeAttributesMask_Value = 2097152,
    OpcUa_NodeAttributesMask_DataTypeDefinition = 4194304,
    OpcUa_NodeAttributesMask_RolePermissions = 8388608,
    OpcUa_NodeAttributesMask_AccessRestrictions = 16777216,
    OpcUa_NodeAttributesMask_All = 33554431,
    OpcUa_NodeAttributesMask_BaseNode = 26501220,
    OpcUa_NodeAttributesMask_Object = 26501348,
    OpcUa_NodeAttributesMask_ObjectType = 26503268,
    OpcUa_NodeAttributesMask_Variable = 26571383,
    OpcUa_NodeAttributesMask_VariableType = 28600438,
    OpcUa_NodeAttributesMask_Method = 26632548,
    OpcUa_NodeAttributesMask_ReferenceType = 26537060,
    OpcUa_NodeAttributesMask_View = 26501356,
    OpcUa_NodeAttributesMask_SizeOf = INT32_MAX
} OpcUa_NodeAttributesMask;

#endif

#ifndef OPCUA_EXCLUDE_AttributeWriteMask
/*============================================================================
 * The AttributeWriteMask enumeration.
 *===========================================================================*/
typedef enum _OpcUa_AttributeWriteMask
{
    OpcUa_AttributeWriteMask_None = 0,
    OpcUa_AttributeWriteMask_AccessLevel = 1,
    OpcUa_AttributeWriteMask_ArrayDimensions = 2,
    OpcUa_AttributeWriteMask_BrowseName = 4,
    OpcUa_AttributeWriteMask_ContainsNoLoops = 8,
    OpcUa_AttributeWriteMask_DataType = 16,
    OpcUa_AttributeWriteMask_Description = 32,
    OpcUa_AttributeWriteMask_DisplayName = 64,
    OpcUa_AttributeWriteMask_EventNotifier = 128,
    OpcUa_AttributeWriteMask_Executable = 256,
    OpcUa_AttributeWriteMask_Historizing = 512,
    OpcUa_AttributeWriteMask_InverseName = 1024,
    OpcUa_AttributeWriteMask_IsAbstract = 2048,
    OpcUa_AttributeWriteMask_MinimumSamplingInterval = 4096,
    OpcUa_AttributeWriteMask_NodeClass = 8192,
    OpcUa_AttributeWriteMask_NodeId = 16384,
    OpcUa_AttributeWriteMask_Symmetric = 32768,
    OpcUa_AttributeWriteMask_UserAccessLevel = 65536,
    OpcUa_AttributeWriteMask_UserExecutable = 131072,
    OpcUa_AttributeWriteMask_UserWriteMask = 262144,
    OpcUa_AttributeWriteMask_ValueRank = 524288,
    OpcUa_AttributeWriteMask_WriteMask = 1048576,
    OpcUa_AttributeWriteMask_ValueForVariableType = 2097152,
    OpcUa_AttributeWriteMask_DataTypeDefinition = 4194304,
    OpcUa_AttributeWriteMask_RolePermissions = 8388608,
    OpcUa_AttributeWriteMask_AccessRestrictions = 16777216,
    OpcUa_AttributeWriteMask_AccessLevelEx = 33554432,
    OpcUa_AttributeWriteMask_SizeOf = INT32_MAX
} OpcUa_AttributeWriteMask;

#endif

#ifndef OPCUA_EXCLUDE_BrowseDirection
/*============================================================================
 * The BrowseDirection enumeration.
 *===========================================================================*/
typedef enum _OpcUa_BrowseDirection
{
    OpcUa_BrowseDirection_Forward = 0,
    OpcUa_BrowseDirection_Inverse = 1,
    OpcUa_BrowseDirection_Both = 2,
    OpcUa_BrowseDirection_Invalid = 3,
    OpcUa_BrowseDirection_SizeOf = INT32_MAX
} OpcUa_BrowseDirection;

#endif

#ifndef OPCUA_EXCLUDE_BrowseResultMask
/*============================================================================
 * The BrowseResultMask enumeration.
 *===========================================================================*/
typedef enum _OpcUa_BrowseResultMask
{
    OpcUa_BrowseResultMask_None = 0,
    OpcUa_BrowseResultMask_ReferenceTypeId = 1,
    OpcUa_BrowseResultMask_IsForward = 2,
    OpcUa_BrowseResultMask_NodeClass = 4,
    OpcUa_BrowseResultMask_BrowseName = 8,
    OpcUa_BrowseResultMask_DisplayName = 16,
    OpcUa_BrowseResultMask_TypeDefinition = 32,
    OpcUa_BrowseResultMask_All = 63,
    OpcUa_BrowseResultMask_ReferenceTypeInfo = 3,
    OpcUa_BrowseResultMask_TargetInfo = 60,
    OpcUa_BrowseResultMask_SizeOf = INT32_MAX
} OpcUa_BrowseResultMask;

#endif

#ifndef OPCUA_EXCLUDE_FilterOperator
/*============================================================================
 * The FilterOperator enumeration.
 *===========================================================================*/
typedef enum _OpcUa_FilterOperator
{
    OpcUa_FilterOperator_Equals = 0,
    OpcUa_FilterOperator_IsNull = 1,
    OpcUa_FilterOperator_GreaterThan = 2,
    OpcUa_FilterOperator_LessThan = 3,
    OpcUa_FilterOperator_GreaterThanOrEqual = 4,
    OpcUa_FilterOperator_LessThanOrEqual = 5,
    OpcUa_FilterOperator_Like = 6,
    OpcUa_FilterOperator_Not = 7,
    OpcUa_FilterOperator_Between = 8,
    OpcUa_FilterOperator_InList = 9,
    OpcUa_FilterOperator_And = 10,
    OpcUa_FilterOperator_Or = 11,
    OpcUa_FilterOperator_Cast = 12,
    OpcUa_FilterOperator_InView = 13,
    OpcUa_FilterOperator_OfType = 14,
    OpcUa_FilterOperator_RelatedTo = 15,
    OpcUa_FilterOperator_BitwiseAnd = 16,
    OpcUa_FilterOperator_BitwiseOr = 17,
    OpcUa_FilterOperator_SizeOf = INT32_MAX
} OpcUa_FilterOperator;

#endif

#ifndef OPCUA_EXCLUDE_TimestampsToReturn
/*============================================================================
 * The TimestampsToReturn enumeration.
 *===========================================================================*/
typedef enum _OpcUa_TimestampsToReturn
{
    OpcUa_TimestampsToReturn_Source = 0,
    OpcUa_TimestampsToReturn_Server = 1,
    OpcUa_TimestampsToReturn_Both = 2,
    OpcUa_TimestampsToReturn_Neither = 3,
    OpcUa_TimestampsToReturn_Invalid = 4,
    OpcUa_TimestampsToReturn_SizeOf = INT32_MAX
} OpcUa_TimestampsToReturn;

#endif

#ifndef OPCUA_EXCLUDE_HistoryUpdateType
/*============================================================================
 * The HistoryUpdateType enumeration.
 *===========================================================================*/
typedef enum _OpcUa_HistoryUpdateType
{
    OpcUa_HistoryUpdateType_Insert = 1,
    OpcUa_HistoryUpdateType_Replace = 2,
    OpcUa_HistoryUpdateType_Update = 3,
    OpcUa_HistoryUpdateType_Delete = 4,
    OpcUa_HistoryUpdateType_SizeOf = INT32_MAX
} OpcUa_HistoryUpdateType;

#endif

#ifndef OPCUA_EXCLUDE_PerformUpdateType
/*============================================================================
 * The PerformUpdateType enumeration.
 *===========================================================================*/
typedef enum _OpcUa_PerformUpdateType
{
    OpcUa_PerformUpdateType_Insert = 1,
    OpcUa_PerformUpdateType_Replace = 2,
    OpcUa_PerformUpdateType_Update = 3,
    OpcUa_PerformUpdateType_Remove = 4,
    OpcUa_PerformUpdateType_SizeOf = INT32_MAX
} OpcUa_PerformUpdateType;

#endif

#ifndef OPCUA_EXCLUDE_MonitoringMode
/*============================================================================
 * The MonitoringMode enumeration.
 *===========================================================================*/
typedef enum _OpcUa_MonitoringMode
{
    OpcUa_MonitoringMode_Disabled = 0,
    OpcUa_MonitoringMode_Sampling = 1,
    OpcUa_MonitoringMode_Reporting = 2,
    OpcUa_MonitoringMode_SizeOf = INT32_MAX
} OpcUa_MonitoringMode;

#endif

#ifndef OPCUA_EXCLUDE_DataChangeTrigger
/*============================================================================
 * The DataChangeTrigger enumeration.
 *===========================================================================*/
typedef enum _OpcUa_DataChangeTrigger
{
    OpcUa_DataChangeTrigger_Status = 0,
    OpcUa_DataChangeTrigger_StatusValue = 1,
    OpcUa_DataChangeTrigger_StatusValueTimestamp = 2,
    OpcUa_DataChangeTrigger_SizeOf = INT32_MAX
} OpcUa_DataChangeTrigger;

#endif

#ifndef OPCUA_EXCLUDE_DeadbandType
/*============================================================================
 * The DeadbandType enumeration.
 *===========================================================================*/
typedef enum _OpcUa_DeadbandType
{
    OpcUa_DeadbandType_None = 0,
    OpcUa_DeadbandType_Absolute = 1,
    OpcUa_DeadbandType_Percent = 2,
    OpcUa_DeadbandType_SizeOf = INT32_MAX
} OpcUa_DeadbandType;

#endif

#ifndef OPCUA_EXCLUDE_RedundancySupport
/*============================================================================
 * The RedundancySupport enumeration.
 *===========================================================================*/
typedef enum _OpcUa_RedundancySupport
{
    OpcUa_RedundancySupport_None = 0,
    OpcUa_RedundancySupport_Cold = 1,
    OpcUa_RedundancySupport_Warm = 2,
    OpcUa_RedundancySupport_Hot = 3,
    OpcUa_RedundancySupport_Transparent = 4,
    OpcUa_RedundancySupport_HotAndMirrored = 5,
    OpcUa_RedundancySupport_SizeOf = INT32_MAX
} OpcUa_RedundancySupport;

#endif

#ifndef OPCUA_EXCLUDE_ServerState
/*============================================================================
 * The ServerState enumeration.
 *===========================================================================*/
typedef enum _OpcUa_ServerState
{
    OpcUa_ServerState_Running = 0,
    OpcUa_ServerState_Failed = 1,
    OpcUa_ServerState_NoConfiguration = 2,
    OpcUa_ServerState_Suspended = 3,
    OpcUa_ServerState_Shutdown = 4,
    OpcUa_ServerState_Test = 5,
    OpcUa_ServerState_CommunicationFault = 6,
    OpcUa_ServerState_Unknown = 7,
    OpcUa_ServerState_SizeOf = INT32_MAX
} OpcUa_ServerState;

#endif

#ifndef OPCUA_EXCLUDE_ModelChangeStructureVerbMask
/*============================================================================
 * The ModelChangeStructureVerbMask enumeration.
 *===========================================================================*/
typedef enum _OpcUa_ModelChangeStructureVerbMask
{
    OpcUa_ModelChangeStructureVerbMask_NodeAdded = 1,
    OpcUa_ModelChangeStructureVerbMask_NodeDeleted = 2,
    OpcUa_ModelChangeStructureVerbMask_ReferenceAdded = 4,
    OpcUa_ModelChangeStructureVerbMask_ReferenceDeleted = 8,
    OpcUa_ModelChangeStructureVerbMask_DataTypeChanged = 16,
    OpcUa_ModelChangeStructureVerbMask_SizeOf = INT32_MAX
} OpcUa_ModelChangeStructureVerbMask;

#endif

#ifndef OPCUA_EXCLUDE_AxisScaleEnumeration
/*============================================================================
 * The AxisScaleEnumeration enumeration.
 *===========================================================================*/
typedef enum _OpcUa_AxisScaleEnumeration
{
    OpcUa_AxisScaleEnumeration_Linear = 0,
    OpcUa_AxisScaleEnumeration_Log = 1,
    OpcUa_AxisScaleEnumeration_Ln = 2,
    OpcUa_AxisScaleEnumeration_SizeOf = INT32_MAX
} OpcUa_AxisScaleEnumeration;

#endif

#ifndef OPCUA_EXCLUDE_ExceptionDeviationFormat
/*============================================================================
 * The ExceptionDeviationFormat enumeration.
 *===========================================================================*/
typedef enum _OpcUa_ExceptionDeviationFormat
{
    OpcUa_ExceptionDeviationFormat_AbsoluteValue = 0,
    OpcUa_ExceptionDeviationFormat_PercentOfValue = 1,
    OpcUa_ExceptionDeviationFormat_PercentOfRange = 2,
    OpcUa_ExceptionDeviationFormat_PercentOfEURange = 3,
    OpcUa_ExceptionDeviationFormat_Unknown = 4,
    OpcUa_ExceptionDeviationFormat_SizeOf = INT32_MAX
} OpcUa_ExceptionDeviationFormat;

#endif

#endif
/* This is the last line of an autogenerated file. */
