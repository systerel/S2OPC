# Continuous Integration configuration with gitlab.com
# See https://gitlab.com/help/ci/yaml/README.md


#########################################################
# Default CI pipeline configuration:
# - preset variables: 'WITH_NANO_EXTENDED = 1' and 'SOPC_HAS_NODE_MANAGEMENT_SERVICES = 1' set in gitlab project
# - jobs run in stages:
#   - gen: generation job
#   - build: build-linux64-ASan
#   - tests:
#     - test-check
#     - test-unit
#     - test-uactt
#
# CI pipeline manual run with 'ALL_TESTS = 1':
# - preset variables: 'WITH_NANO_EXTENDED = 1' and 'SOPC_HAS_NODE_MANAGEMENT_SERVICES = 1' set in gitlab project
# - jobs run in stages:
#   - build: build-linux64-pys2opc # 'WITH_ASAN = 0' and 'WITH_PYS2OPC = 1'
#   - tests: # TEST_SERVER_XML_ADDRESS_SPACE, TEST_SERVER_XML_CONFIG and TEST_USERS_XML_CONFIG are NOT set to use static config
#     - test-unit-all-tests
#     - test-uactt-all-tests
#
# CI pipeline manual run with 'ALL_BUILDS = 1':
# - preset variables: 'WITH_NANO_EXTENDED = 1'  and 'SOPC_HAS_NODE_MANAGEMENT_SERVICES = 1' set in gitlab project
# - jobs run in stages:
#   - gen: generation job
#   - build: # 'WITH_STATIC_SECURITY_DATA: 1', 'WITH_CONST_ADDSPACE: 1' and 'PUBSUB_STATIC_CONFIG: 1'
#     - build-linux64-static-conf
#   - tests:
#     - test-unit
#   - build-others:
#     - build-win32
#     - build-win64
#
# CI pipeline manual run with 'CROSS_COMPILE = 1':
# - jobs run in stages:
#   - build-others:
#     - build-win32
#     - build-win64
#########################################################

.variables: &nominal_build_variables
  SOPC_HAS_NODE_MANAGEMENT_SERVICES: 1

.variables: &nominal_test_variables
  SOPC_HAS_NODE_MANAGEMENT_SERVICES: 1
  TEST_SERVER_XML_ADDRESS_SPACE: S2OPC_Test_NodeSet.xml
  TEST_SERVER_XML_CONFIG: S2OPC_Server_UACTT_Config.xml
  TEST_USERS_XML_CONFIG: S2OPC_UACTT_Users.xml
  TEST_SERVER_PRIVATE_KEY_PWD : password
  TEST_CLIENT_PRIVATE_KEY_PWD : password

# Variables for ALL_BUILDS and ALL_TESTS manual pipelines

.variables: &all-tests_build_variables
  WITH_PYS2OPC: 1

.variables: &all-builds_build_variables
  WITH_STATIC_SECURITY_DATA: 1
  WITH_CONST_ADDSPACE: 1
  PUBSUB_STATIC_CONFIG: 1

stages:
  - gen
  - build
  - test
  - build-others
  - analyses
  - doc

# Avoid to run 2 pipelines in case of MR
# (1 for branch and 1 for MR)
workflow:
  rules:
    - if: '$CI_PIPELINE_SOURCE == "merge_request_event"'
    - if: '$CI_PIPELINE_SOURCE == "schedule"'
    - if: '$CI_PIPELINE_SOURCE == "web"'
    - if: '$CI_COMMIT_TAG'
    - if: '$CI_COMMIT_BRANCH && $CI_OPEN_MERGE_REQUESTS'
      when: never
    - if: '$CI_COMMIT_BRANCH'

.docker-job: &docker_job
  tags:
    - docker
    - linux

###
# Generation jobs
###

generation:
  stage: gen
  image: com.systerel.fr:5000/c838/gen-ext@sha256:66cadeb219f3904e78ade14ef85e57aa0309eff4416e9625b0fd4bea8e976cd7 # digest of gen-ext:1.4
  script:
    - ./clean.sh all
    - ./.validates_xml_schemas.sh
    - ./.pre-build-ext.sh
    - ./.check_generated_code.sh
  artifacts:
    name: 'bgenc-${CI_COMMIT_REF_SLUG}_${CI_COMMIT_SHA}'
    paths:
      - 'pre-build.log'
    when: always
    expire_in: '1 week'
    when: always
  rules:
    - if: "$NO_GEN == null && \
           $WINDOWS_TEST == null && \
           $CROSS_COMPILE == null && \
           $S2OPC_PUBSUB_ONLY == null &&\
           $ALL_BUILDS == null && \
           $ALL_TESTS == null && \
           $WITH_DOC == null"
      when: on_success

###
# Compilation jobs
###

.build-linux: &build_linux
  stage: build
  image: docker.aix.systerel.fr/c838/build@sha256:73a5ee23694a3a57189285ab4df933f57500641ade232dd2a6690eacaecf4abf # digest of build:1.32
  script:
    - &build_command_line './build.sh && cd $BUILD_DIR || exit 1'
  variables: &build_linux_variables
    DOCKER_IMAGE: 'sha256:6e062c5b593e72549e2cebe91036b4722c3d158fbcf6eda077946d5f459dd4eb'
    BUILD_DIR: build
  artifacts:
    name: 'bin-${CI_COMMIT_REF_SLUG}_${CI_COMMIT_SHA}'
    paths:
      - '*.log'
      - 'build/'  # Required by tests / coverage
    expire_in: '1 week'
    when: always
# Common rules overwritten by each job using this template
#  rules: # note: should be repeated in each child job of *build_linux
#    - if: "$WINDOWS_TEST == null && $CROSS_COMPILE == null && $WITH_COVERITY == null && $WITH_DOC == null"
#      when: on_success

# Used by "normal" pipeline
build-linux64-ASan:
  <<: *build_linux
  variables:
    <<: *build_linux_variables
    <<: *nominal_build_variables
    WITH_ASAN: 1
    WITH_UBSAN: 1
  rules: # 1st line repeat .build-linux + added rules to avoid ASAN build
    - if: "$WINDOWS_TEST == null && $CROSS_COMPILE == null && \
           $WITH_COVERITY == null && $WITH_COVERAGE == null && $WITH_DOC == null && \
           $NO_ASAN == null && $ALL_TESTS == null && $ALL_BUILDS == null" # avoid ASAN build in most of nightly builds
      when: on_success

# Used by all-tests pipeline (add tests which needs NO_ASAN)
build-linux64-pys2opc:
  <<: *build_linux
  variables:
    <<: *build_linux_variables
    <<: *all-tests_build_variables # add pys2opc
  rules: # do not repeat .build-linux: due to disjunction + need only those 2 conditions
    - if: "$ALL_TESTS != null || $NO_ASAN != null && $WITH_NANO_EXTENDED == '1'" # if ASAN is deactivated build PyS2OPC by default (exclude nano scope: see TODO below)
      when: on_success

# Used when ALL_BUILDS set (tests use static configuration)
build-linux64-static-conf:
  <<: *build_linux
  variables:
    <<: *build_linux_variables
    <<: *all-builds_build_variables # add static conf
  rules: # single case rule of ALL_BUILDS
    - if: "$ALL_BUILDS != null"
      when: on_success

build-linux64-NoASan-NoPyS2OPC:
  <<: *build_linux
  variables:
    <<: *build_linux_variables
  rules: # In case of coverage analysis or when nano scope is used (TODO: PyS2OPC shall be built but tests will fail: use another server with subscription in tests)
    - if: "$WITH_COVERAGE != null || $NO_ASAN != null && $WITH_NANO_EXTENDED != '1'"
      when: on_success

build-win64: &build_win64
  stage: build-others
  image: docker.aix.systerel.fr/c838/mingw_build@sha256:b9d5619a72109f24f8fe4c7cce03216153542cd20734a9eaae01104ca5166b8a # digest of mingw_build:1.12
  script:
    # Manually disable PyS2OPC for windows cross builds. When set in "variables:", the value is overwritten.
    - 'export WITH_PYS2OPC=OFF'
    - *build_command_line
  variables: &build_win64_variables
    CMAKE_TOOLCHAIN_FILE: 'toolchain-mingw32-w64_x86_64.cmake'
    DOCKER_IMAGE: 'sha256:3d552edb5eab18138ef4ad6652b6da8fef00dc36dc6b9fd9fe890ffff513c3e5'
    BUILD_DIR: build_toolchain
    S2OPC_CLIENTSERVER_ONLY: 1 # PubSub is not compatible with windows platform
    WARNINGS_AS_ERRORS: 0 # Some format warnings remain on MinGW
  artifacts:
    name: 'bin-w64-${CI_COMMIT_REF_SLUG}_${CI_COMMIT_SHA}'
    paths:
      - '$BUILD_DIR/bin'
    expire_in: '1 week'
  rules:
   - if: "$CROSS_COMPILE != null || $ALL_BUILDS != null || $CI_PIPELINE_SOURCE == 'merge_request_event' || $CI_COMMIT_TAG"
     when: always # run even if previous job in pipeline failed

build-win32:
  <<: *build_win64
  variables:
    <<: *build_win64_variables
    CMAKE_TOOLCHAIN_FILE: 'toolchain-mingw32-w64.cmake'
  artifacts:
    name: 'bin-w32-${CI_COMMIT_REF_SLUG}_${CI_COMMIT_SHA}'
    paths:
      - '$BUILD_DIR/bin/'
    expire_in: '1 week'
  rules:
   - if: "$CROSS_COMPILE != null || $ALL_BUILDS != null || $CI_PIPELINE_SOURCE == 'merge_request_event' || $CI_COMMIT_TAG"
     when: always # run even if previous job in pipeline failed

build-rpi:
  stage: build-others
  image: docker.aix.systerel.fr/c838/rpi-build@sha256:9a0d79a685ca3c17664561a16344ddb2fb8fd2641791d26982ddeb6912bd340b # digest of rpi-build:1.5
  script:
    - *build_command_line
  variables:
    CMAKE_TOOLCHAIN_FILE: '/toolchain-rpi.cmake'
    DOCKER_IMAGE: 'sha256:464cfa4e22af6d1933a17b14db182632dfd28febc3495adbd286aa1e5d8265e4'
    BUILD_SHARED_LIBS: 'true'
    BUILD_DIR: build_toolchain
  artifacts:
    name: 'bin-rpi-${CI_COMMIT_REF_SLUG}_${CI_COMMIT_SHA}'
    paths:
      - '$BUILD_DIR/bin'
    expire_in: '1 week'
  rules:
   - if: "$CROSS_COMPILE != null || $ALL_BUILDS != null || $CI_PIPELINE_SOURCE == 'merge_request_event' || $CI_COMMIT_TAG"
     when: always # run even if previous job in pipeline failed

build-zephyr:
  stage: build-others
  image: docker.aix.systerel.fr/c838/zephyr_build@sha256:9808bec78b1f86bf747734b9f6893643a4090dcb92a005680884ee836c94f4ff # digest of zephyr_build :v1
  script:
    - 'zephyr/build-zephyr-samples-docker.sh || exit $?'
  variables:
  artifacts:
    name: 'bin-zephyr-${CI_COMMIT_REF_SLUG}_${CI_COMMIT_SHA}'
    paths:
      - 'build_zephyr/'
    expire_in: '1 month'
  rules:
    - if: "$CROSS_COMPILE != null || $ALL_BUILDS != null || $CI_MERGE_REQUEST_TARGET_BRANCH_NAME == 'master' || $CI_COMMIT_TAG"
      when: always
     
###
# Test jobs
###

test-build-from-export:
  <<: *build_linux
  stage: test
  script:
    - 'mkdir -p ${CI_PROJECT_DIR}/samples/ClientServer/build_samples'
    - 'cd ${CI_PROJECT_DIR}/samples/ClientServer/build_samples'
    - 's2opc_DIR=${CI_PROJECT_DIR}/build cmake ..'
    - 'cmake --build .'
    - 'mkdir -p ${CI_PROJECT_DIR}/samples/PubSub/build_samples'
    - 'cd ${CI_PROJECT_DIR}/samples/ClientServer/build_samples'
    - 's2opc_DIR=${CI_PROJECT_DIR}/build cmake ..'
    - 'cmake --build .'
    - 'mkdir -p ${CI_PROJECT_DIR}/samples/PubSub_ClientServer/build_samples'
    - 'cd ${CI_PROJECT_DIR}/samples/ClientServer/build_samples'
    - 's2opc_DIR=${CI_PROJECT_DIR}/build cmake ..'
    - 'cmake --build .'
  artifacts:
  rules:
    - if: "$NO_TESTS == null && $WINDOWS_TEST == null && $CROSS_COMPILE == null && \
           $WITH_COVERITY == null && $WITH_COVERAGE == null && $WITH_DOC == null && \
           $S2OPC_PUBSUB_ONLY == null && $S2OPC_CLIENTSERVER_ONLY == null && \
           $ALL_BUILDS == null && $ALL_TESTS == null"
      when: on_success

.test-linux: &test_linux
  stage: test
# Common rules overwritten by each job using this template
#  rules: # note to be repeated by each child job of *test_linux
#    - if: "$NO_TESTS == null && $WINDOWS_TEST == null && $CROSS_COMPILE == null && \
#           $WITH_COVERITY == null && $WITH_COVERAGE == null"
#      when: on_success

# Test check belongs to the test part, however it does not depend on linux build.
test-check:
  <<: *test_linux
  image: docker.aix.systerel.fr/c838/check@sha256:d2669779db000ffe35634c3f16523c8275f3fefdc508b87973d91d58ad2706d8 # digest of check:1.15
  script:
    - ./.check-code.sh
    # Check generated types are up to date
    - './scripts/gen-sopc-types.py ./schemas/Opc.Ua.Types.bsd'
    - './scripts/generate-embedded-base-type-info.py ./schemas/Opc.Ua.NodeSet2.xml src/Common/opcua_types/sopc_embedded_nodeset2.h'
    - './.format.sh'
    - 'git ls-files -m | test 0 -eq `wc -l`'
  variables:
      DOCKER_IMAGE: 'sha256:068bd9b338a6fa1848d31fee375d779c2351dde8737dc50cb904333dec13d071'
  artifacts:
    name: 'test-check-results-${CI_COMMIT_REF_SLUG}_${CI_COMMIT_SHA}'
    paths:
      - 'pre-build-check.log'
      - 'clang_tidy.log'
      - 'build-analyzer/analyzer-report'
    when: on_failure
    expire_in: '1 week'
  rules: # repeat .test-linux variables exception since overwritten here
    - if: "$NO_TESTS == null && $WINDOWS_TEST == null && $CROSS_COMPILE == null && \
           $WITH_COVERITY == null && $WITH_COVERAGE == null && $WITH_DOC == null && \
           $ALL_TESTS == null && $ALL_BUILDS == null"
      when: on_success

.test-unit: &test_unit
  <<: *test_linux
  image: docker.aix.systerel.fr/c838/test@sha256:996e2bd7a493117e07fd967d18f20872abc86508acff7b94347108e4a13b7114 # digest of test:2.13
  script:
    - './.set-bin-root.sh'
    - './test-all.sh'
  artifacts:
    name: 'test-unit-results-${CI_COMMIT_REF_SLUG}_${CI_COMMIT_SHA}'
    paths:
      - 'build/bin/**/*.tap'
      - 'build/bin/**/*.log'
      - 'build/tests/**/Testing'
      - 'build/**/*.*.gcda' # coverage analysis
      - 'build/**/*.*.gcno' # coverage analysis
    when: always
    expire_in: '1 week'
# Common rules defined by test-unit job below

# Test unit for ALL_TESTS variable (add dynamic configuration)
test-unit-all-tests:
  <<: *test_unit
  script:
    - './.set-bin-root.sh'
    - './test-all.sh'
  rules:
    - if: "$ALL_TESTS != null"
      when: on_success

# Test unit for NOT ALL_TESTS variable
test-unit:
  <<: *test_unit
  variables:
    <<: *nominal_test_variables
  rules: # repeat .test-linux variables exception since overwritten here
    - if: "$NO_TESTS == null && $WINDOWS_TEST == null && $CROSS_COMPILE == null && \
           $WITH_COVERITY == null && $WITH_DOC == null && \
           $ALL_TESTS == null" # + excludes ALL_TESTS
      when: on_success

.test-uactt: &test_uactt
  <<: *test_linux
  image: com.systerel.fr:5000/c838/uactt-win@sha256:b4eaa441d76c81d6b61d7e08e22a3b3b3c8fb5f84f777b41f5ed15b468c0c80a # digest of uactt-win:1.9
  script:
    - 'cd tests/ClientServer/acceptance_tools/ && ./launch_acceptance_tests.sh'
  artifacts:
    name: 'uactt-logs-${CI_COMMIT_REF_SLUG}_${CI_COMMIT_SHA}'
    paths:
      - 'build/bin/**/*.tap'
      - 'build/bin/**/*.log'
      - 'tests/ClientServer/acceptance_tools/*.log'
      - '**/*.*.gcda' # coverage analysis
      - '**/*.*.gcno' # coverage analysis
    when: always
    expire_in: '1 week'

# Test unit for ALL_TESTS variable (add dynamic configuration)
test-uactt-all-tests:
  <<: *test_uactt
  rules:
    - if: "$ALL_TESTS != null && \
           $S2OPC_PUBSUB_ONLY == null && \
           $ALL_BUILDS == null" # + no UACTT tests on PubSub + excludes ALL_BUILDS

# Test unit for NOT ALL_TESTS variable
test-uactt:
  <<: *test_uactt
  variables:
    <<: *nominal_test_variables
  rules: # repeat .test-uactt variables exception since overwritten here
    - if: "$NO_TESTS == null && $WINDOWS_TEST == null && $CROSS_COMPILE == null && \
           $WITH_COVERITY == null && $WITH_COVERAGE == null && $WITH_DOC == null && \
           $S2OPC_PUBSUB_ONLY == null && $ALL_BUILDS == null && $ALL_TESTS == null"
           # + no UACTT tests on PubSub + excludes ALL_BUILDS + excludes ALL_TESTS
      when: on_success

###
# Analysis jobs
###

coverage-analysis:
  stage: analyses
  image: docker.aix.systerel.fr/c838/test@sha256:996e2bd7a493117e07fd967d18f20872abc86508acff7b94347108e4a13b7114  # digest of test:2.13
  script:
    - ./.gen_coverage.sh
  artifacts:
    name: 'coverage-report-${CI_COMMIT_REF_SLUG}_${CI_COMMIT_SHA}'
    paths:
      - 'report'
    expire_in: '1 week'
  rules:
    - if: "$WITH_COVERAGE != null"

###
# Documentation generation and publication
###

# The job name must be "pages", and the html must be in "public/" and put in an artifact.
pages:
  <<: *build_linux
  stage: doc
  dependencies: []
  rules:
    - if: "$WITH_DOC != null"
    - if: "$CI_PIPELINE_SOURCE == 'push' && $CI_COMMIT_BRANCH == 'master'"
  variables:
    <<: *build_linux_variables
  script:
    - mkdir $BUILD_DIR
    - cd $BUILD_DIR
    # PyS2OPC relies on subscriptions
    - cmake -DWITH_NANO_EXTENDED=yes -DSOPC_HAS_NODE_MANAGEMENT_SERVICES=yes -DWITH_PYS2OPC=yes ..
    - cmake --build . --target doc
    - mv apidoc/html ../public/
  artifacts:
    paths:
    - public
    expire_in: 30 days

check_doc:
  <<: *build_linux
  stage: doc
  script:
    - cd $BUILD_DIR
    - cmake --build . --target doc &> doc.log
    - test $(grep -c warning doc.log) -eq 0
  variables:
    <<: *build_linux_variables
  artifacts:
    paths:
      - '$BUILD_DIR/doc.log'
    expire_in: '1 week'
    when: on_failure
  rules:
   - if: "$ALL_BUILDS != null || $CI_PIPELINE_SOURCE == 'merge_request_event' || $CI_COMMIT_TAG"
     when: always # run even if previous job in pipeline failed
