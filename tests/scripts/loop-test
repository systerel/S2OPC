#!/usr/bin/env python3

# Copyright (C) 2018 Systerel and others.
#
# This program is free software: you can redistribute it and/or modify
# it under the terms of the GNU Affero General Public License as
# published by the Free Software Foundation, either version 3 of the
# License, or (at your option) any later version.
#
# This program is distributed in the hope that it will be useful,
# but WITHOUT ANY WARRANTY; without even the implied warranty of
# MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
# GNU Affero General Public License for more details.
#
# You should have received a copy of the GNU Affero General Public License
# along with this program.  If not, see <http://www.gnu.org/licenses/>.

"""
Helper script to automatize the multiple calls to a sometime-failing-test.
This includes setting env variables, changing paths, ...

Always modify it before using it. Always set it to a 'nothing to do' state before commit.
"""

import os
import sys
import subprocess
import shlex

#def usage():
#    print('''Usage: {} CMD
#
#Execute the command until it fails.'''.format(sys.argv[0]), file=sys.stderr)

if __name__ == '__main__':
    if True:  # Must be started in bin/, starts test_client against test_server
        assert os.path.abspath('.').endswith('bin')
        os.environ['TEST_SERVER_CMD'] = './toolkit_test_server'
        os.environ['_RR_TRACE_DIR'] = './rr'
        os.makedirs(os.environ['_RR_TRACE_DIR'], exist_ok=True)
        try:
            n = 0
            while 'Test successful':
                n += 1
                #subprocess.check_call(shlex.split('../tests/scripts/with-toolkit-test-server rr record ./toolkit_test_client'),
                subprocess.check_call(shlex.split('../tests/scripts/with-toolkit-test-server ./toolkit_test_client'),
                                      stdout=subprocess.DEVNULL, stderr=subprocess.STDOUT)
                print('.', end='', flush=True)
        except (subprocess.CalledProcessError, KeyboardInterrupt):
            pass
        finally:
            print('\n{} tests'.format(n))

