# Continuous Integration configuration with gitlab.com
# See https://gitlab.com/help/ci/yaml/README.md

stages:
  - gen
  - build
  - test
  - build-others
  - analyses

.docker-job: &docker_job
  tags:
    - docker
    - linux
  # only:
  #   - master

###
# Generation jobs
###

generation:
  <<: *docker_job
  stage: gen
  image: com2.systerel.fr:5000/c765/gen-ext@sha256:46030280f56788c6156c2837151d8fd17270b9872c4e916cf615522b8c27a8f4 # digest of gen-ext:1.2
  script:
    - ./clean.sh all
    - ./.pre-build-ext.sh
    - ./.check_generated_code.sh
  artifacts:
    name: 'bgenc-${CI_COMMIT_REF_SLUG}_${CI_COMMIT_SHA}'
    paths:
      - 'pre-build.log'
    when: always
    expire_in: '1 month'
    when: always

###
# Compilation jobs
###

.build-linux: &build_linux
  <<: *docker_job
  stage: build
  image: registry.gitlab.com/systerel/s2opc/build@sha256:17d9703e1d8cc414be0f3ccab0b9f1cc3f938d3c0ba0da0482bf6ecbcf32828e # digest of build:1.11
  script:
    - &build_command_line './build.sh && cd $BUILD_DIR && cmake --build . --target install && ../tests/scripts/make-ctestfile-relative CTestTestfile.cmake > ./bin/CTestTestfile.cmake || exit 1'
  variables: &build_linux_variables
    CMAKE_INSTALL_PREFIX: '../install_linux64'
    DOCKER_IMAGE: 'sha256:88ff9b24dfaeceac59b3347a5d3c7081a5b7162ec52b56005571949ebddc0614'
    BUILD_DIR: build
  artifacts:
    name: 'bin-${CI_COMMIT_REF_SLUG}_${CI_COMMIT_SHA}'
    paths:
      - 'install_linux64/'
      - 'build/'  # Required when using coverage analysis
    expire_in: '1 month'

# Used by "normal" pipeline
build-linux64-ASan:
  <<: *build_linux
  variables:
    <<: *build_linux_variables
    WITH_ASAN: 1
  except:
    variables:
      - $NO_ASAN

# Used by coverage
build-linux64:
  <<: *build_linux
  except:
    variables:
      - $WITH_COVERITY
      - $WINDOWS_TEST

build-win64: &build_win64
  <<: *docker_job
  stage: build-others
  image: registry.gitlab.com/systerel/s2opc/mingw_build@sha256:2f795355fd5e4b9ce3da064f049d9bf1296a13aa1fea3092cc81937b00a2bc8e # digest of mingw_build:1.7
  script:
    - *build_command_line
  variables: &build_win64_variables
    CMAKE_INSTALL_PREFIX: '../install_win64'
    CMAKE_TOOLCHAIN_FILE: 'toolchain-mingw32-w64_x86_64.cmake'
    DOCKER_IMAGE: 'sha256:e2b17a02f7d4e4d6150435ca717b4d0691b3d2f4e5c55df9c0f22930e728892b'
    BUILD_SHARED_LIBS: 'true'
    BUILD_DIR: build_toolchain
  artifacts:
    name: 'bin-w64-${CI_COMMIT_REF_SLUG}_${CI_COMMIT_SHA}'
    paths:
      - '$BUILD_DIR/bin/'
      - 'install_win64/'
    expire_in: '1 month'
  only:
    variables:
      - $CROSS_COMPILE
  dependencies:
    - generation

build-win32:
  <<: *build_win64
  variables:
    <<: *build_win64_variables
    CMAKE_INSTALL_PREFIX: '../install_win32'
    CMAKE_TOOLCHAIN_FILE: 'toolchain-mingw32-w64.cmake'
  artifacts:
    name: 'bin-w32-${CI_COMMIT_REF_SLUG}_${CI_COMMIT_SHA}'
    paths:
      - '$BUILD_DIR/bin/'
      - 'install_win32/'
    expire_in: '1 month'
  only:
    variables:
      - $CROSS_COMPILE

# Used by coverity, also starts the analysis
build-linux64-coverity:
  <<: *docker_job
  stage: build
  image: registry.gitlab.com/systerel/s2opc/coverity@sha256:c6a7d2c85f838a665ca9160de187183e747337db67e62562140f3dfbf17bf5d4 # digest of coverity:1.3
  script: |-
    mkdir build
    cd build
    cmake -DWITH_COVERITY=1 -DCMAKE_BUILD_TYPE=Debug ..
    /opt/cov-analysis-linux64-2017.07/bin/cov-build --dir cov-int make
    tar czf cov-int.tar.gz cov-int
    curl -k --form token=${COVERITY_TOKEN} --form email=${COVERITY_EMAIL} --form version=${CI_COMMIT_REF_SLUG}_${CI_COMMIT_SHA} --form description=${CI_COMMIT_REF_SLUG}_${CI_COMMIT_SHA} --form file=@cov-int.tar.gz https://scan.coverity.com/builds?project=S2OPC
  only:
    variables:
      - $WITH_COVERITY

###
# Test jobs
###

.test-linux: &test_linux
  <<: *docker_job
  stage: test
  except:
    variables:
      - $NO_ASAN

# Test check belongs to the test part, however it does not depend on linux build.
test-check:
  <<: *test_linux
  image: registry.gitlab.com/systerel/s2opc/check@sha256:519f8cb1376aa29ed4432ec34d4ea865bce8a74cfb58940afb6c9fe856305059 # digest of check:1.4
  script:
    - ./.check-code.sh
  dependencies:
    - generation
  artifacts:
    name: 'test-check-results-${CI_COMMIT_REF_SLUG}_${CI_COMMIT_SHA}'
    paths:
      - 'pre-build-check.log'
      - 'clang_tidy.log'
      - 'build-analyzer/analyzer-report'
    when: on_failure
    expire_in: '1 month'

test-unit:
  <<: *test_linux
  image: registry.gitlab.com/systerel/s2opc/test@sha256:2517f830aa2dbf50868021cf184981c5b75f91b1768e4fbfdab282cc0daa8231  # digest of test:2.3
  script:
    - ./test-all.sh
  dependencies:
    # Explicit dependencies to keep ASan binaries
    - build-linux64
    - build-linux64-ASan
  artifacts:
    name: 'test-unit-results-${CI_COMMIT_REF_SLUG}_${CI_COMMIT_SHA}'
    paths:
      - 'build/'
    when: always
    expire_in: '1 month'
  except:
    variables:
      - $CROSS_COMPILE
      - $WINDOWS_TEST
      - $WITH_COVERITY

test-uactt:
  <<: *test_linux
  image: com2.systerel.fr:5000/c765/uactt@sha256:d986fad99fe526ab81aca1149cd488db85b6a478187239c0ebdd265968d8c4c9  # digest of uactt:1.5
  script:
    - 'cd acceptances_tests/ && ./launch_acceptance_tests.sh'
  artifacts:
    name: 'uactt-logs-${CI_COMMIT_REF_SLUG}_${CI_COMMIT_SHA}'
    paths:
      - 'build/'
      - 'acceptances_tests/*.log'
    when: always
    expire_in: '1 month'

###
# Analysis jobs
###

coverage-analysis:
  <<: *docker_job
  stage: analyses
  image: registry.gitlab.com/systerel/s2opc/test@sha256:2517f830aa2dbf50868021cf184981c5b75f91b1768e4fbfdab282cc0daa8231  # digest of test:2.3
  script:
    - ./.gen_coverage.sh
  artifacts:
    name: 'coverage-report-${CI_COMMIT_REF_SLUG}_${CI_COMMIT_SHA}'
    paths:
      - 'report'
    expire_in: '1 month'
  only:
    variables:
      - $WITH_COVERAGE

windows-appveyor:
  stage: analyses
  image: docker.io/library/debian@sha256:de3eac83cd481c04c5d6c7344cd7327625a1d8b2540e82a8231b5675cef0ae5f  # debian:9
  script:
    - 'apt-get update && apt-get -y install curl && curl -H "Authorization: Bearer $APPVEYOR_TOKEN" -H "Content-Type: application/json" --request POST -d ''{"accountName" : "Systerel", "projectSlug": "s2opc", "branch": "''$CI_COMMIT_REF_NAME''"}'' https://ci.appveyor.com/api/builds'
  tags:
    - linux
  only:
    variables:
      - $WINDOWS_TEST
