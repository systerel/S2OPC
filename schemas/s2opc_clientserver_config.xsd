<?xml version="1.0" encoding="utf-8" ?>
<xs:schema xmlns:xs="http://www.w3.org/2001/XMLSchema">
  <xs:element name="S2OPC" type="S2OPCType"/>
  <xs:simpleType name="ApplicationTypeEnum">
    <xs:restriction base="xs:string">
      <xs:enumeration value="Server"/>
      <xs:enumeration value="Client"/>
      <xs:enumeration value="ClientAndServer"/>
      <xs:enumeration value="DiscoveryServer"/>
    </xs:restriction>
  </xs:simpleType>
  <xs:simpleType name="SecurityURI">
    <xs:restriction base="xs:anyURI">
      <xs:enumeration value="http://opcfoundation.org/UA/SecurityPolicy#None"/>
      <xs:enumeration value="http://opcfoundation.org/UA/SecurityPolicy#Basic256"/>
      <xs:enumeration value="http://opcfoundation.org/UA/SecurityPolicy#Basic256Sha256"/>
      <xs:enumeration value="http://opcfoundation.org/UA/SecurityPolicy#Aes128_Sha256_RsaOaep"/>
      <xs:enumeration value="http://opcfoundation.org/UA/SecurityPolicy#Aes256_Sha256_RsaPss"/>
    </xs:restriction>
  </xs:simpleType>
  <xs:simpleType name="SecurityMode">
    <xs:restriction base="xs:string">
      <xs:enumeration value="None"/>
      <xs:enumeration value="Sign"/>
      <xs:enumeration value="SignAndEncrypt"/>
    </xs:restriction>
  </xs:simpleType>
  <xs:simpleType name="TokenType">
    <xs:restriction base="xs:string">
      <xs:enumeration value="anonymous"/>
      <xs:enumeration value="username"/>
      <xs:enumeration value="certificate"/>
    </xs:restriction>
  </xs:simpleType>
  <xs:complexType name="NamespaceType">
    <xs:simpleContent>
      <xs:extension base="xs:string">
        <xs:attribute type="xs:anyURI" name="uri" use="required"/>
      </xs:extension>
    </xs:simpleContent>
  </xs:complexType>
  <xs:complexType name="NamespacesType">
    <xs:sequence>
      <xs:element type="NamespaceType" name="Namespace" minOccurs="1" maxOccurs="unbounded"/>
    </xs:sequence>
  </xs:complexType>
  <xs:complexType name="LocaleType">
    <xs:simpleContent>
      <xs:extension base="xs:string">
        <xs:attribute type="xs:string" name="id" use="required"/>
      </xs:extension>
    </xs:simpleContent>
  </xs:complexType>
  <xs:complexType name="LocalesType">
    <xs:sequence>
      <xs:element type="LocaleType" name="Locale" minOccurs="1" maxOccurs="unbounded"/>
    </xs:sequence>
  </xs:complexType>
  <xs:complexType name="CertificateType">
    <xs:simpleContent>
      <xs:extension base="xs:string">
        <xs:attribute type="xs:string" name="path" use="required"/>
      </xs:extension>
    </xs:simpleContent>
  </xs:complexType>
  <xs:complexType name="KeyType">
    <xs:simpleContent>
      <xs:extension base="xs:string">
        <xs:attribute type="xs:string" name="path" use="required"/>
        <xs:attribute type="xs:string" name="encrypted" use="optional" default="false"/>
      </xs:extension>
    </xs:simpleContent>
  </xs:complexType>
  <xs:complexType name="IssuerType">
    <xs:simpleContent>
      <xs:extension base="xs:string">
        <xs:attribute type="xs:string" name="cert_path" use="required"/>
        <xs:attribute type="xs:string" name="revocation_list_path" use="required"/>
        <xs:attribute type="xs:boolean" name="root" use="required"/>
      </xs:extension>
    </xs:simpleContent>
  </xs:complexType>
  <xs:complexType name="TrustedIssuersType">
    <xs:sequence>
      <xs:element type="IssuerType" name="TrustedIssuer" maxOccurs="unbounded">
        <xs:annotation>
          <xs:documentation>One or several trusted certificate authorities</xs:documentation>
        </xs:annotation>
      </xs:element>
    </xs:sequence>
  </xs:complexType>
  <xs:complexType name="IssuedCertificateType">
    <xs:simpleContent>
      <xs:extension base="xs:string">
        <xs:attribute type="xs:string" name="path" use="required"/>
      </xs:extension>
    </xs:simpleContent>
  </xs:complexType>
  <xs:complexType name="IssuedCertificatesType">
    <xs:sequence>
      <xs:element type="IssuedCertificateType" name="IssuedCertificate" maxOccurs="unbounded">
        <xs:annotation>
          <xs:documentation>One or several explicitly trusted certificates issued by provided issuers or self-signed</xs:documentation>
        </xs:annotation>
      </xs:element>
    </xs:sequence>
  </xs:complexType>
  <xs:complexType name="UntrustedIssuersType">
    <xs:sequence>
      <xs:element type="IssuerType" name="UntrustedIssuer" maxOccurs="unbounded">
        <xs:annotation>
          <xs:documentation>One or several untrusted certificate authorities. Those are only used to validate trust chain of issued certificate.</xs:documentation>
        </xs:annotation>
      </xs:element>
    </xs:sequence>
  </xs:complexType>
  <xs:complexType name="ServerApplicationCertificatesType">
    <xs:sequence>
      <xs:element type="CertificateType" name="ServerCertificate" />
      <xs:element type="KeyType" name="ServerKey" />
      <xs:element type="TrustedIssuersType" name="TrustedIssuers" minOccurs="0"/>
      <xs:element type="IssuedCertificatesType" name="IssuedCertificates" minOccurs="0">
        <xs:annotation>
          <xs:documentation>At least one shall be filled in either TrustedIssuers or IssuedCertificates</xs:documentation>
        </xs:annotation>
      </xs:element>
      <xs:element type="UntrustedIssuersType" name="UntrustedIssuers" minOccurs="0"/>
    </xs:sequence>
  </xs:complexType>
  <xs:complexType name="ClientApplicationCertificatesType">
    <xs:sequence>
      <xs:element type="CertificateType" name="ClientCertificate" />
      <xs:element type="KeyType" name="ClientKey" />
      <xs:element type="TrustedIssuersType" name="TrustedIssuers" minOccurs="0"/>
      <xs:element type="IssuedCertificatesType" name="IssuedCertificates" minOccurs="0">
        <xs:annotation>
          <xs:documentation>At least one shall be filled in either TrustedIssuers or IssuedCertificates</xs:documentation>
        </xs:annotation>
      </xs:element>
      <xs:element type="UntrustedIssuersType" name="UntrustedIssuers" minOccurs="0"/>
    </xs:sequence>
  </xs:complexType>
  <xs:complexType name="ApplicationURIType">
    <xs:simpleContent>
      <xs:extension base="xs:string">
        <xs:attribute type="xs:anyURI" name="uri" use="required"/>
      </xs:extension>
    </xs:simpleContent>
  </xs:complexType>
  <xs:complexType name="ProductURIType">
    <xs:simpleContent>
      <xs:extension base="xs:string">
        <xs:attribute type="xs:anyURI" name="uri" use="required"/>
      </xs:extension>
    </xs:simpleContent>
  </xs:complexType>
  <xs:complexType name="ApplicationNameType">
    <xs:simpleContent>
      <xs:extension base="xs:string">
        <xs:attribute type="xs:string" name="text" use="required"/>
        <xs:attribute type="xs:string" name="locale" use="optional"/>
      </xs:extension>
    </xs:simpleContent>
  </xs:complexType>
  <xs:complexType name="ApplicationTypeType">
    <xs:simpleContent>
      <xs:extension base="xs:string">
        <xs:attribute type="ApplicationTypeEnum" name="type" default="Server" />
      </xs:extension>
    </xs:simpleContent>
  </xs:complexType>
  <xs:complexType name="ServerApplicationDescriptionType">
    <xs:sequence>
      <xs:element type="ApplicationURIType" name="ApplicationURI" />
      <xs:element type="ProductURIType" name="ProductURI" />
      <xs:element type="ApplicationNameType" name="ApplicationName" maxOccurs="unbounded"/>
      <xs:element type="ApplicationTypeType" name="ApplicationType" default="Server" minOccurs="0"/>
    </xs:sequence>
  </xs:complexType>
  <xs:complexType name="ClientApplicationDescriptionType">
    <xs:sequence>
      <xs:element type="ApplicationURIType" name="ApplicationURI" />
      <xs:element type="ProductURIType" name="ProductURI" />
      <xs:element type="ApplicationNameType" name="ApplicationName"/>
      <xs:element type="ApplicationTypeType" name="ApplicationType" default="Client" minOccurs="0"/>
    </xs:sequence>
  </xs:complexType>
  <xs:complexType name="SecurityModeType">
    <xs:simpleContent>
      <xs:extension base="xs:string">
        <xs:attribute type="SecurityMode" name="mode" use="required"/>
      </xs:extension>
    </xs:simpleContent>
  </xs:complexType>
  <xs:complexType name="SecurityModesType">
    <xs:sequence>
      <xs:element type="SecurityModeType" name="SecurityMode" maxOccurs="3" minOccurs="1"/>
    </xs:sequence>
  </xs:complexType>
  <xs:complexType name="SecurityPolicyType">
    <xs:sequence>
      <xs:element type="SecurityModesType" name="SecurityModes"/>
      <xs:element name="UserPolicies">
        <xs:complexType mixed="true">
          <xs:sequence>
            <xs:element type="UserPolicyType" name="UserPolicy" maxOccurs="5">
            </xs:element>
          </xs:sequence>
        </xs:complexType>
      </xs:element>
    </xs:sequence>
    <xs:attribute type="SecurityURI" name="uri" use="required"/>
  </xs:complexType>
  <xs:complexType name="SimpleSecurityPolicyType">
    <xs:attribute type="SecurityURI" name="uri" use="required"/>
  </xs:complexType>
  <xs:complexType name="UserPolicyType">
    <xs:simpleContent>
      <xs:extension base="xs:string">
        <xs:attribute type="xs:string" name="policyId"  use="required"/>
        <xs:attribute type="TokenType" name="tokenType"  use="required"/>
        <xs:attribute type="SecurityURI" name="securityUri" use="optional">
          <xs:annotation>
            <xs:documentation>It is mandatory when token type is not anonymous. When it is empty the endpoint security policy URI is used (it cannot be None).</xs:documentation>
            <xs:documentation>Available token types are anonymous, username and x509 certificate.</xs:documentation>
          </xs:annotation>
        </xs:attribute>
      </xs:extension>
    </xs:simpleContent>
  </xs:complexType>
  <xs:complexType name="UserPoliciesType">
    <xs:sequence>
      <xs:element type="UserPolicyType" name="UserPolicy" maxOccurs="5" minOccurs="0">
        <xs:annotation>
          <xs:documentation>Available token types are only anonymous, username and x509 certificate.</xs:documentation>
        </xs:annotation>
      </xs:element>
    </xs:sequence>
  </xs:complexType>
  <xs:complexType name="SecurityPoliciesType">
    <xs:sequence>
      <xs:element type="SecurityPolicyType" name="SecurityPolicy" maxOccurs="5" minOccurs="1">
      </xs:element>
    </xs:sequence>
  </xs:complexType>
  <xs:complexType name="ReverseConnectionType">
    <xs:attribute type="xs:anyURI" name="clientUrl" use="required"/>
    <xs:attribute type="xs:anyURI" name="clientAppUri" use="optional"/>
  </xs:complexType>
  <xs:complexType name="ReverseConnectionsType">
    <xs:sequence>
      <xs:element type="ReverseConnectionType" name="ReverseConnection" maxOccurs="unbounded" minOccurs="0">
      </xs:element>
    </xs:sequence>
  </xs:complexType>
  <xs:complexType name="EndpointType">
    <xs:sequence>
      <xs:element type="ReverseConnectionsType" name="ReverseConnections" minOccurs="0"/>
      <xs:element type="SecurityPoliciesType" name="SecurityPolicies"/>
    </xs:sequence>
    <xs:attribute type="xs:anyURI" name="url" use="required"/>
    <xs:attribute type="xs:boolean" name="hasDiscoveryEndpoint" use="optional" default="true">
      <xs:annotation>
        <xs:documentation>By default each endpoint has an implicit discovery endpoint if security mode None is not available. Set to 'false' to deactivate.</xs:documentation>
      </xs:annotation>
    </xs:attribute>
    <xs:attribute type="xs:boolean" name="enableListening" use="optional" default="true">
      <xs:annotation>
        <xs:documentation>This attribute might be set to false to avoid listening for client connections only if at least one ReverseConnection is defined.</xs:documentation>
      </xs:annotation>
    </xs:attribute>
  </xs:complexType>
  <xs:complexType name="EndpointsType">
    <xs:sequence>
      <xs:element type="EndpointType" name="Endpoint" maxOccurs="unbounded">
        <xs:annotation>
          <xs:documentation>Note: Endpoint no transport URI (only TCP available) and no security level (computed by server)</xs:documentation>
        </xs:annotation>
      </xs:element>
    </xs:sequence>
  </xs:complexType>
  <xs:complexType name="ServerConfigurationType">
    <xs:sequence>
      <xs:element type="NamespacesType" name="Namespaces" />
      <xs:element type="LocalesType" name="Locales" />
      <xs:element type="ServerApplicationCertificatesType" name="ApplicationCertificates" minOccurs="0" maxOccurs="1">
        <xs:annotation>
          <xs:documentation>Certificates not necessary if only security policy None is used</xs:documentation>
        </xs:annotation>
      </xs:element>
      <xs:element type="ServerApplicationDescriptionType" name="ApplicationDescription" />
      <xs:element type="EndpointsType" name="Endpoints" />
    </xs:sequence>
  </xs:complexType>
  <xs:complexType name="ConnectionUserNameType">
    <xs:attribute type="xs:string" name="name" use="required"/>
  </xs:complexType>
  <xs:complexType name="ConnectionUserCertType">
    <xs:attribute type="xs:string" name="cert_path" use="required"/>
    <xs:attribute type="xs:string" name="key_path" use="required"/>
    <xs:attribute type="xs:string" name="encrypted" use="optional" default="false"/>
  </xs:complexType>
  <xs:complexType name="ConnectionUserPolicyType">
    <xs:sequence>
      <xs:element type="ConnectionUserNameType" name="UserName" minOccurs="0" maxOccurs="1">
        <xs:annotation>
          <xs:documentation>Mandatory if tokenType is 'username'</xs:documentation>
        </xs:annotation>
      </xs:element>
      <xs:element type="ConnectionUserCertType" name="UserX509" minOccurs="0" maxOccurs="1">
        <xs:annotation>
          <xs:documentation>Mandatory if tokenType is 'username'</xs:documentation>
        </xs:annotation>
      </xs:element>
    </xs:sequence>
    <xs:attribute type="xs:string" name="policyId"  use="required"/> <!-- Might be optional in the future if auto-selection --> 
    <xs:attribute type="TokenType" name="tokenType"  use="required"/>
    <!-- <xs:attribute type="SecurityURI" name="securityUri" use="optional"/> Determined by policyId until it becames optionnal -->
  </xs:complexType>
  <xs:complexType name="ConnectionType">
    <xs:sequence>
      <xs:element type="CertificateType" name="ServerCertificate"/>
      <xs:element type="SimpleSecurityPolicyType" name="SecurityPolicy"/>
      <xs:element type="SecurityModeType" name="SecurityMode"/>
      <xs:element type="ConnectionUserPolicyType" name="UserPolicy">
        <xs:annotation>
          <xs:documentation>
            If not defined the user token type is anonymous and no policy id is set.
            Note: the user policy id might be required by server even in anonymous mode.
          </xs:documentation>
        </xs:annotation>
      </xs:element>
    </xs:sequence>
    <xs:attribute type="xs:anyURI" name="id">
      <xs:annotation>
        <xs:documentation>A user defined identifier to retrieve the easily the connection</xs:documentation>
      </xs:annotation>
    </xs:attribute>
    <xs:attribute type="xs:anyURI" name="serverURL" use="required"/>
    <xs:attribute type="xs:anyURI" name="reverseEndpointURL">
      <xs:annotation>
        <xs:documentation>When the attribute is set, the connection uses reverse mechanism.</xs:documentation>
      </xs:annotation>
    </xs:attribute>
    <xs:attribute type="xs:anyURI" name="serverURI">
        <xs:annotation>
          <xs:documentation>
            This value shall only be specified if the server is accessed through a gateway server.
            In this case this value is the applicationUri for the underlying Server.
            This value might be specified for reverse connection in order to be verified
            on ReverseHello reception.
          </xs:documentation>
        </xs:annotation>
    </xs:attribute>
    <xs:attribute type="xs:unsignedInt" name="reqLifetimeMs" default="3600000"/>
  </xs:complexType>
  <xs:complexType name="ConnectionsType">
    <xs:sequence>
      <xs:element type="ConnectionType" name="Connection" maxOccurs="unbounded"/>
    </xs:sequence>
  </xs:complexType>
  <xs:complexType name="ClientConfigurationType">
    <xs:sequence>
      <xs:element type="LocalesType" name="PreferredLocales" />
      <xs:element type="ClientApplicationCertificatesType" name="ApplicationCertificates" minOccurs="0" maxOccurs="1">
        <xs:annotation>
          <xs:documentation>Certificates not necessary if only security policy None is used</xs:documentation>
        </xs:annotation>
      </xs:element>
      <xs:element type="ClientApplicationDescriptionType" name="ApplicationDescription" />
      <xs:element type="ConnectionsType" name="Connections" minOccurs="0" maxOccurs="1"/>
    </xs:sequence>
  </xs:complexType>
  <xs:complexType name="S2OPCType">
    <xs:sequence>
      <xs:element type="ServerConfigurationType" name="ServerConfiguration" minOccurs="0"/>
      <xs:element type="ClientConfigurationType" name="ClientConfiguration" minOccurs="0"/>
    </xs:sequence>
  </xs:complexType>
</xs:schema>
